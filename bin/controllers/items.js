// Generated by CoffeeScript 1.6.3
(function() {
  var Base, Items, template, vent,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('base');

  vent = null;

  template = null;

  module.exports = function(vnt, tmpl) {
    if (vent == null) {
      vent = vnt;
    }
    if (template == null) {
      template = tmpl;
    }
    return Items;
  };

  Items = (function(_super) {
    __extends(Items, _super);

    Items.prototype.tagName = 'div';

    Items.prototype.className = 'item';

    Items.prototype.events = {
      'mousedown': 'click'
    };

    function Items() {
      this.select = __bind(this.select, this);
      this.click = __bind(this.click, this);
      this.remove = __bind(this.remove, this);
      this.render = __bind(this.render, this);
      Items.__super__.constructor.apply(this, arguments);
      this.el = $("<" + this.tagName + " class=\"" + this.className + "\">");
      this.bind();
      this.listen(this.item, {
        'select': this.select
      });
      this.listen(this.item.collection, {
        'remove': this.remove
      });
      this.el.toggleClass('hasChild', !!this.item.child);
    }

    Items.prototype.render = function() {
      this.el.html(template.render(this.item.toJSON()));
      return this;
    };

    Items.prototype.remove = function() {
      this.unbind();
      this.el.remove();
      delete this.el;
      return this.unlisten();
    };

    Items.prototype.click = function() {
      return this.item.collection.trigger('click:item', this.item);
    };

    Items.prototype.select = function() {
      return this.el.addClass('active');
    };

    return Items;

  })(Base.Controller);

}).call(this);
